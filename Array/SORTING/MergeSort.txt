import java.util.Scanner;

class Array{
    public static void MergeSort(int [] arr, int si, int ei){
        if (si < ei) {
            int mid = si + (ei - si) / 2;
            MergeSort(arr, si, mid); // Left half
            MergeSort(arr, mid + 1, ei); // Right half
            merge(arr, si, mid, ei); // Merging the two halves
        }
    }

    public static void printarr(int [] arr){
        for(int i = 0; i < arr.length; i++){
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void merge(int [] arr, int si, int mid, int ei){
        int [] temp = new int[ei - si + 1];
        int i = si; // Iterator for left part
        int j = mid + 1; // Iterator for right part
        int k = 0; // Iterator for temp array

        // Merging the two sorted halves
        while(i <= mid && j <= ei){
            if(arr[i] <= arr[j]){ // <= to handle equal values correctly
                temp[k] = arr[i];
                i++;
            } else {
                temp[k] = arr[j];
                j++;
            }
            k++;
        }

        // If any elements remain in the left half
        while(i <= mid){
            temp[k] = arr[i];
            i++;
            k++;
        }

        // If any elements remain in the right half
        while(j <= ei){
            temp[k] = arr[j];
            j++;
            k++;
        }

        // Copy the merged elements back into the original array
        for(k = 0, i = si; k < temp.length; k++, i++){
            arr[i] = temp[k];
        }
    }

    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter number of elements in array");
        int n = sc.nextInt();
        int [] arr = new int[n];
        System.out.println("Enter elements in array");
        for(int i = 0; i < arr.length; i++){
            arr[i] = sc.nextInt();
        }
        MergeSort(arr, 0, arr.length - 1);
        printarr(arr);
    }
}
